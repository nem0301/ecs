@261
D=A
@SP
M=D
@Sys.init
0;JMP
11,	C_FUNCTION,	'function Sys.init 0'
(Sys.init)
12,	C_PUSH,	'push constant 4'
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
13,	C_CALL,	'call Main.fibonacci 1'
@return_address0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@6
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(return_address0)
14,	C_LABEL,	'label WHILE'
(Sys.init:WHILE)
15,	C_GOTO,	'goto WHILE'
@Sys.init:WHILE
0;JMP
26,	C_FUNCTION,	'function Main.fibonacci 0'
(Main.fibonacci)
27,	C_PUSH,	'push argument 0'
@0
D=A
@ARG
D=D+M
@i
M=D
@i
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
28,	C_PUSH,	'push constant 2'
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
29,	C_IF,	'lt'
@5
D=A
@i
M=D
@SP
AM=M-1
D=M
@i
A=M
M=D
@6
D=A
@i
M=D
@SP
AM=M-1
D=M
@i
A=M
M=D
@R5
D=D-M
@LT0
D;JLT
@0
D=A
@R5
M=D
@5
D=A
@i
M=D
@i
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@LTEND0
0;JMP
(LT0)
@0
D=A
D=!D
@R5
M=D
@5
D=A
@i
M=D
@i
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
(LTEND0)
30,	C_GOTO,	'if-goto IF_TRUE'
@SP
AM=M-1
D=M
@Main.fibonacci:IF_TRUE
D;JNE
31,	C_GOTO,	'goto IF_FALSE'
@Main.fibonacci:IF_FALSE
0;JMP
32,	C_LABEL,	'label IF_TRUE'
(Main.fibonacci:IF_TRUE)
33,	C_PUSH,	'push argument 0'
@0
D=A
@ARG
D=D+M
@i
M=D
@i
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
34,	C_RETURN,	'return'
@LCL
D=M
@frame
M=D
@5
D=A
@frame
A=M-D
D=M
@ret
M=D
@0
D=A
@ARG
D=D+M
@i
M=D
@SP
AM=M-1
D=M
@i
A=M
M=D
@ARG
D=M
@SP
M=D+1
@1
D=A
@frame
A=M-D
D=M
@THAT
M=D
@2
D=A
@frame
A=M-D
D=M
@THIS
M=D
@3
D=A
@frame
A=M-D
D=M
@ARG
M=D
@4
D=A
@frame
A=M-D
D=M
@LCL
M=D
@ret
A=M
0;JMP
35,	C_LABEL,	'label IF_FALSE'
(label:IF_FALSE)
36,	C_PUSH,	'push argument 0'
@0
D=A
@ARG
D=D+M
@i
M=D
@i
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
37,	C_PUSH,	'push constant 2'
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
38,	C_ARITHMETIC,	'sub'
@5
D=A
@i
M=D
@SP
AM=M-1
D=M
@i
A=M
M=D
@6
D=A
@i
M=D
@SP
AM=M-1
D=M
@i
A=M
M=D
@R5
M=D-M
@5
D=A
@i
M=D
@i
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
39,	C_CALL,	'call Main.fibonacci 1'
@return_address1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@6
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(return_address1)
40,	C_PUSH,	'push argument 0'
@0
D=A
@ARG
D=D+M
@i
M=D
@i
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
41,	C_PUSH,	'push constant 1'
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
42,	C_ARITHMETIC,	'sub'
@5
D=A
@i
M=D
@SP
AM=M-1
D=M
@i
A=M
M=D
@6
D=A
@i
M=D
@SP
AM=M-1
D=M
@i
A=M
M=D
@R5
M=D-M
@5
D=A
@i
M=D
@i
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
43,	C_CALL,	'call Main.fibonacci 1'
@return_address2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@6
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(return_address2)
44,	C_ARITHMETIC,	'add'
@5
D=A
@i
M=D
@SP
AM=M-1
D=M
@i
A=M
M=D
@6
D=A
@i
M=D
@SP
AM=M-1
D=M
@i
A=M
M=D
@R5
M=D+M
@5
D=A
@i
M=D
@i
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
45,	C_RETURN,	'return'
@LCL
D=M
@frame
M=D
@5
D=A
@frame
A=M-D
D=M
@ret
M=D
@0
D=A
@ARG
D=D+M
@i
M=D
@SP
AM=M-1
D=M
@i
A=M
M=D
@ARG
D=M
@SP
M=D+1
@1
D=A
@frame
A=M-D
D=M
@THAT
M=D
@2
D=A
@frame
A=M-D
D=M
@THIS
M=D
@3
D=A
@frame
A=M-D
D=M
@ARG
M=D
@4
D=A
@frame
A=M-D
D=M
@LCL
M=D
@ret
A=M
0;JMP
